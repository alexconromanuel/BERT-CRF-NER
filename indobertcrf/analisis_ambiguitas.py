# -*- coding: utf-8 -*-
"""Analisis Ambiguitas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1roephi9_e8HQ2ii6V1ySPjLG39WnYkrF
"""

# Commented out IPython magic to ensure Python compatibility.
#Data analysis   
import pandas as pd 
import numpy as np
import csv
import nltk
import tensorflow as tf

#Data visualisation 
import matplotlib.pyplot as plt
import seaborn as sns
sns.set(color_codes=True)
sns.set(font_scale=1)
# %matplotlib inline
from matplotlib import ticker
# %config InlineBackend.figure_format = 'svg'

import pandas as pd

dataset = pd.read_csv("https://raw.githubusercontent.com/ialfina/ner-dataset-modified-dee/master/singgalang/SINGGALANG.tsv", header = None, delimiter="\t", names=['token', 'entitas'], quoting=csv.QUOTE_NONE, encoding='utf-8')

len(dataset)

len(dataset['token'])

dataset.head()

d = pd.read_csv("https://raw.githubusercontent.com/ialfina/ner-dataset-modified-dee/master/singgalang/SINGGALANG.tsv", header = None, delimiter="\t", quoting=csv.QUOTE_NONE, encoding='utf-8')

from sklearn.model_selection import train_test_split
train, test = train_test_split(d, test_size=0.2, shuffle=False)

train.head(30)

test.head(30)

"""# Perbandingan jumlah token ambigu dengan unique token"""

dt = dataset.copy()
print(len(dt))

dt['distinctentitas'] = dt['token'].map(dataset.groupby('token')['entitas'].nunique(dropna = True))

len(dt)

dt.head(30)

ambigu= dt.copy()
index_unique = ambigu[ ambigu['distinctentitas'] < 2 ].index
ambigu.drop(index_unique, inplace = True)

ambigu.head()

#Token yang ambigu
print('jumlah token ambigu: ',len(ambigu))
#Kata Kata yang ambigu
print('jumlah kata ambigu: ',ambigu['token'].nunique())

# importing libraries
import matplotlib.pyplot as plt
import seaborn
  
# declaring data
value = [len(dataset)-len(ambigu), len(ambigu)]
keys = ['Unik', 'Ambigu']
  
# define Seaborn color palette to use
palette_color = seaborn.color_palette('bright')
  
# plotting data on chart
plt.pie(value, labels=keys, colors=palette_color, autopct='%.0f%%')

# Define title on chart
plt.title('Perbandingan Jumlah Token Ambigu dengan Token Unik')
  
# displaying chart
plt.show()

"""# Perbandingan jumlah token tiap kelompok jumlah duplikasi entitas"""

data = dataset.copy()
print(len(data))

data.head(10)

data['distinctentitas'] = data['token'].map(dataset.groupby('token')['entitas'].nunique(dropna = True))

viz = data.groupby(['distinctentitas'])['token'].count()

viz

sum(viz)

# importing libraries
import matplotlib.pyplot as plt
import seaborn
  
# declaring data
value = viz
keys = ['1 Entitas', '2 Entitas', '3 Entitas', '4 Entitas']
  
# define Seaborn color palette to use
palette_color = seaborn.color_palette('bright')
  
# plotting data on chart
plt.pie(value, labels=keys, colors=palette_color, autopct='%.0f%%')

# Define title on chart
plt.title('Perbandingan Jumlah Token Ambigu per Jumlah Entitas dengan Token Unik')

# displaying chart
plt.show()

"""#Menghitung frasa"""

df = pd.read_csv("https://raw.githubusercontent.com/ialfina/ner-dataset-modified-dee/master/singgalang/SINGGALANG.tsv", header = None, delimiter="\t", names=['token', 'entitas'], quoting=csv.QUOTE_NONE, encoding='utf-8')

df.head(10)

df['token'].mask(df['entitas'] == 'O', '-', inplace=True)

df.tail(50)

import pandas 
list = []
tmp_list = []
entity = ""

for val in df.itertuples():
  if val.Index == 0: #pada initial val
      tmp_list.append(val.token)
      entity = val.entitas
  else:
    if val.token != "-": #the rest NE val
        if val.entitas == entity: #jika entitas sekarang sama dengan entitas sebelumnya
          tmp_list.append(val.token)
          list.append(tmp_list)
        else: #jika entitas sekarang berbeda dengan entitas sebelumnya
          tmp_list.append(val.token)
          entity = val.entitas
    else: #jika other
        entity = val.entitas
        tmp_list = []

print(list)

# jumlah frasa
len(list)

a=0
for p in list:
    a+=len(p)
print(a)

#token yang merupakan frasa
print(a/len(df['token']))